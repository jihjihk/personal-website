{
	
	"week7": 
	{
		"week" : "week7",
		"title" : "Software Leverage Points",
		"subtitle" : "Places to intervene in a software system",
		"date" : "October 27, 2017",
		"text" :"Software systems of virtual worlds are emerging to match the traditional systems in their magnitude and extent of influence. Using Twelve Leverage Points proposed by Donella H. Meadows, software creators and system organizers can identify leverage points--where small shift in one thing can produce big changes in everything--in software systems as well. The prevalence of open-source governance and fast-changing nature of software may yield different leverage points than those in economic growth systems that are more closed and slow to adapt. There were still very interesting parallels that could inspire more software creators and consumers to clearly recognize where and how they could intervene in the increasingly ambiguous and scary AI and automation world of black box algorithms. \n While all twelve leverage points are relevant, I wanted to look closer into the most effective few. The fourth that Meadows put forward is \"the power to add, change, evolve, or self-organize system structure.\" She highlights the importance of adaptability and open-mindedness of any system to survive in highly volatile environment. To aid the development of such resilience then requires \"clevel rules for self-organization.\" I thought this relates well to the internet protocols and <a href=’http://wiki.civiccommons.org/Open_Source_Development_Guidelines/’>Open Source Development Guidelines</a> that are ultimately these \"rules for self-organization\" that are essential for functioning self-organization that is very effective in intervening in a system. The fast evolution cycle of most open source programs through systematic version control and easy public contribution helps these systems avoid \"insistence on a single culture [that] shuts down learning.\" \n The goals of systems and the mindset out of which the system arose also reflect an interesting dichotomy between initial purpose and gradual evolution of many software applications, especially within for-profit and private companies. Meadows makes a clear distinction between profit-making and goal of a system; making profit is necessary condition to stay in the game, whereas the goal is \"to grow, to increase market share, to bring the world more and more under the control of the corporation so that its operations become ever more shielded from uncertainty.\" Proliferating public relations effort of most companies has allowed users of software systems to directly believe in the initial paradigm of the company’s creation to be the goal, like Facebook and <a href=’https://www.facebook.com/zuck/videos/10103817960742861/’>its recent mission statement</a> to ‘bring the world closer together.’ The incredible user base size of Facebook, now in billions, is one of many indicators of Facebook’s success in this most fundamental goal: to grow, both in numbers and in control. For a growing portion of its user base that feels less control over their software use, perhaps the most crucial first step is to correctly identify and discern the software company’s most fundamental goal, then to leverage this knowledge for an effective leverage point that will produce big changes."
	},
	"week6": 
	{
		"week" : "week6",
		"title" : "Government Control",
		"subtitle" : "An asymmetrically distributed system",
		"date" : "October 9, 2017",
		"text" :"As the boundary between technical and social decisions blurs, it is increasingly important to understand the potential impact a software can have within a community that utilizes it. This comprehension, however, remains a privilege and responsibility restricted to few software engineers and designers as mass adoption of a technology can only happen after enough layers of obscurity and abstraction for wide public to intuitively adopt and utilize. In a sense user experience is the middle layer that masks transistors and translates binary code to human-readable buttons. This ironic cycle of technology going through abstraction for thus consequences to the public will probably remain a dilemma without a solution. \n Galloway, in his book introduction in \"Protocol: Control After Decentralization\", described the internet as an organized placed of information thanks to the protocol that reconciles its two machinic technology: the non-hiearchicial, peer-to-peer relationship of TCP/IP and the rigidly defined hierarchies of DNS. These protocols function as \"recommendations and rules that outline specific technical standards\" and therefore organize the internet and the society into distributed systems. While beautiful in its analogies and abstraction of the internet, I found it contradictory to the commercialized reality of today's internet businesses that thrive on centralized, mass collection of data. One could argue that this only reflects rigid, hierarchical one of the two sides machinic techonlogies, as many individuals have simultaneously gained access to the distributed network of information that these platforms provide. The balance of these two sides of social media, however, is questionable. \n The clear information and power asymmetry demonstrated by today's Facebooks and Twitters reflect that neither the internet nor its users are parts of truly distributed networks that TCP/IP may embody on a protocol level. In Tufekci's paper on \"Engineering the Public\" the author mentions how proliferation of data generated by the public has been used at the public by politicians and companies that mask this influence in \"black box algorithms.\" The author refers to information asymmetry that with centralized data and modeling, campaigns create an illusion that candidates can now understand and address the public sphere's common needs better, when in reality they only improved the speed and cost efficiency of individual-targetted advertisement. Will a shift to a more distributed of data ownership and influence come in the near future, and if so, how will it change the public sphere as this generation's internet companies already have?"
	},
	"week5": 
	{
		"week" : "week5",
		"title" : "Popular Organization",
		"subtitle" : "How social media elected and impeached South Korean president",
		"date" : "October 5, 2017",
		"text" :"<img src=\"http://mytorchtech.herokuapp.com/logorec1.png\" height=\"200px\" alt=\"newTorchTechLogo\"> <h2>Links to the app and the code</h2> <h4><a href=\"https://mytorchtech.herokuapp.com\">mytorch.tech</a></h4> <h4><a href=\"https://github.com/gaborcsapo/mytorch.tech\">Code on Github</a></h4> <h2>Sprint 2</h2> <p>After making the <a href=\"https://jihjihk.herokuapp.com/projects/week4\">first prototype</a> of mytorch and presenting it to the class, we made some improvements, did more user tests, and implemented even more changes. We wanted to make the app as close to real deployment as possible by reflecting our classmates' opinions and concerns about the app.</p> <h2>User Feedback</h2> <p>We tested the app with our classmates on campus. We briefly described what the app was and let them interact with it to see what was and wasn't intuitive. It was very helpful to conduct these tests with people who we never told about mytorch because we were able to learn some crucial lessons about how to improve on the project.</p> <p>Some of the feedback:</p> <ul> <li>Lack of tagline makes the app ambiguous to first time users</li> <li>Too much text for the safety tips page</li> <li>Button texts (e.g. Public Safety) are not very clear or descriptive</li> <li>Form input validation is necessary for certain fields</li> <li>More step-by-step guide of first aid tips would be better</li> <li>Nav bar button doesn't work on mobile view</li> <li>'Settings' is not the best word; perhaps My Contacts?</li> <li>Better explanation of the consequences of pressing each button</li> <li>What happens if public safety doesn't confirm receiving of the messages?</li> <li>Who has access to the incident reports?</li> </ul> <p>Overall we learned how important it was to make the purpose of the app as clear as possible from the very first page. We were so used to working on the app that we missed how much information we omitted when editing. The same applied to other text descriptions or wordings that seemed obvious to us but were misnterpreted by first time users. So we understood that this round of improvements should not only included technical updates but also better phrasing of the text.</p> <h2>Making Improvements</h2> <p>We decided to log every user feedback we got on to the <a href=\"https://github.com/gaborcsapo/mytorch.tech/projects/1\">Github project board</a>. This way Gabor and I could see which problems the other one worked on the past few days and get a sense of the updated features without going through the new commited changes. The key areas we worked on were: </p> <h4>MongoDB Database</h4> <p>We now have a configured MongoDB database that stores all users, users' friends contact information and incident reportings. Whenver a first time user logs in to the app with their NYU credentials, a new account is created in our database, and they are prompted to input their 3 friends' contact information. This only happens at their first log in, although they can update phone numbers in /contacts page. The database also stores incident reports. It is interesting that a lot of our friends asked about who has access to these reports because often times they could be very sensitive information. Currently, it's just the admins of the heroku app that has access to the stored data, but the question of authority, access and obligation to report is something we will have to discuss and decide on.</p> <img src=\"../mytorchscreen.png\" height=\"400px\" style=\"display: block; margin: auto\"> <p style=\"font-style: italic;\">The updated home page</p> <h4>Tagline</h4> <p>After realizing how important it was to have a clearer description of the app was, we decided to have a clear sentence \"is someone feeling unsafe?\" from the very first login page. We want this to line to convey that 1. we help someone who feels unsafe 2. you can report for yourself or for others. Right below, we also include \"Use mytorch to contact friends, RAs or Public Safety to help you or others.\" to make it clear who they can contact for help and how.</p> <h4>More Guided and Validated Form Inputs</h4> <p>We split up the form input from 1 text field for location to 4 fields for building number, residential building number, location description, and situation. By having a dropdown menu of the locations as well as helper texts, we guide the user to generate a more structured data about where they are. We also added a Situation form that asks for why the person feels unsafe. These fields are made mandatory using <a href=\"https://validatejs.org/\">validate.js</a> validation library. We also added \"Who to Contact\" line to make it clearer that users will be contacting following people for help when they press corresponding buttons.</p> <h4>Pop-up Boxes for Confirmation</h4> <p>We added pop-up boxes in case someone pressed the wrong button or doesn't understand when to call whom. Before we had text box below buttons that explained different situations to call either public safety or RAs but we got some feedback that this wasn't as helpful so pop-up made more sense.</p> <h4>Safety Tips</h4> <p>We tried to make the safety tips and information easier to read by separating them into three divs and toggling each only when the corresponding button is clicked. We are yet to include UAE specific information but definitely want to improve on it with more pictures and region-specific information.</p> <h4>Documentation, Bugs and Other Changes</h4> <p>We also added relatively comprehensive documentation and README to open up to the community. We also want to speak to admin and relevant university offices so we thought having a well documented repository would be very helpful. We also fixed minor bugs and made other changes to improve the overall app.</p> <h2>Moving Forward</h2> <p>The more we work on this, the more there seems to do, but we are very happy with the overall progress. After having presented in the Mashups class, most of our classmates said that they would definitely use this app. We want to continue the conversation going with admin and student life office to get some funding (eg paying for API and hosting services) while opening up to the community to make improvements that we didn't think of or didn't know how to approach. For example, someone suggested that we should integrate with the Facebook messaging API to instantly message our friends on Facebook instead of trying to call them, since most of us don't have working phone numbers or know others' phone numbers. These new suggestions and advices were added to the <a href=\"https://github.com/gaborcsapo/mytorch.tech/projects/1\">Github project board</a> so we can keep track of them and continue working on them.</p> <p>There are some questions beyond technical issues that we still need to answer. For example, the question of who gets access to the incident report data is something we need to discuss and get agreements from the NYUAD community. We might need to include a user agreement box, for example, to make sure that everyone understands who gets access to what data on this app.</p> <p>Another important decision to make is how we become liable when help is requested but it's not delivered. One way we thought of was having the Public Safety respond to the sent text message with a simple Yes or No and then we can notify the user about the status in real-time. Because Twilio doesn't provide local UAE numbers as server numbers, we have to configure a way to allow public safety, RAs or user's friends to send international texts to the number. This leads to another problem of having two incidents reported at the same time and not being able to discriminate between which incident Public Safety responded to. We thought we could include a URL that can be clicked on to confirm help being sent for a specific incident, but this doesn't account for cases in which Public Safety or RAs don't have smartphones. (In fact, the RA phone is the basic phone that only supports call and text.)</p> <p>We will hopefully meet with university offices to see what they think about our progress and how they can help us move forward. We will also try to gauge the student body's interests and get help in any way they would like to contribute in.</p>"
	},
	"week4":
	{
		"week" : "week4",
		"title" : "Modeling Society",
		"subtitle" : "Computability of the real world",
		"date" : "September 25, 2017",
		"text" :"There are two video games that I have ever played of my own free will: Sims and Minecraft. Almost every weekend at the age of 14, I would stay up hours on end personalizing characters, building houses and simulating communities. After awhile the game would get repetitive and predictable, but then I would start over with a new persona, new job, new house and new \"rules to live by.\" \n Why was I so enticed into the game? The pleasure certainly ran deeper than the aesthetic pleasure of creating houses. Perhaps it was the autonomy and control. In his paper \"Dumb People, Smart Objects: The Sims and the Distributed Self\", Jeremy Tirrell explains the intricate architecture of Sims and how it \"identifies a particular model of a distributed self functioning in Sims games that dissolves distinctions between human and object, real and virtual.\" Some aspects of today's reality reflected in the Sims virtuality, such as being interpersonal, restricted in resource and time, and commodity-driven, are obvious and visceral to most players. What is not as manifest, however, is the extent to which a self (both the player's and character's) is defined by objects around it. Tirrell's claim that the distinction between real and virtual, human and object dissolve because Sims adopts and reinforces the philosophy that humans and objects are both equally important and entangled nodes in a network. \n I think Sims is both simplistic and deeply futuristic in representing the real world. The game, although very intricate and meticulous, is still programmed to a set of if else statements, lacking randomness and irrationality that are very present in real life. At the same time, the \"city blocks and transportation systems [that] function as autonomous agents according to rules based upon their physical relationship to other agents\" encapsulates the bottom-up powers of emergence that the recent rise of decentralization and blockchain come to represent. It is fascinating that although human players \"control\" the game flow, they have no means of dictating or governing the Sims reality; no player has a direct control to enforce arbitrary rules or to regulate the interpersonal interactions. This design itself puts humans as a node, rather than a controller, of the decentralized web. \n Can such co-dependent autonomy in which central institutions are just another nodes and not commanding bodies exist in the real world? If inanimate objects without character or irrational decision making dictated humans' behaviors, can we exist without unrest? According to the \"Modeling civil violence: an agent-based computation approach\" paper, two ethnic groups can peacefully co-exist with high legitimacy. If every node perceived each other's right to exist as equal, then cops or legal system are not required to keep peace. If this computational model was realistic enough thus accurate, how can we experiment with a society in which every node is equally legitimate? \n While Tirrell's observation of the reality as a decentralized network between humans and objects is fascinating, I do not see self as something determined by objects. While materialistic ownership is still very dominant, don't we as humans recognize experiences more than physical objects to have shaped our views? Also similar \"local nodes\" share many objects from same computers to public buses, but these alone cannot account for the varying degrees of personality amongst us. \n If I were to play Sims again, would I be as obsessed as I was seven years ago? Probably not. It might be due to the greater autonomy and legitimacy I believe I have in my life. Or could it possibly be the greater freedom I feel from the need to own and abide by the material objects around me?"
	},
	"week3": 
	{
		"week" : "week3",
		"title" : "The Black Box Bias",
		"subtitle" : "Letting the data decide for us",
		"date" : "September 18, 2017",
		"text" : "Machine learning is literally leaving the decision-making process to an algorithm and asking for only the results of a certain computation. This abstraction tool is becoming more accessible as it becomes even more abstracted from the machine into simple libraries like sci-kit learn, with which we can now focus more applying than devising the algorithm. \n One useful application of machine learning is Spotify's Discover Weekly, which trains on individual's weekly music taste and then gives recommendations. The decision-making is relatively simple in this case; we can safely assume that the frequency of listening to a song is highly correlated with our liking for the music, although one week of abnormal listening behavior is likely to very easily throw off the recommendations. It's a relatively simple black box that does what we expect it to that trains on very relevant dataset--individual's playlist. \n Can the same black box be used to identify terrorists to kill? Other machine learning models, however, are hard to predict and ever so data hungry that the priority is often on getting a lot of data regardless of relevance. In the case of calculating a dispersion matrix based on phone signals, contact frequency, geolocation, and other unannotated data, identifying hot nodes thus nominating terrorists to kill is not as simple as predicting someone's music taste. As stated in Weber's paper, it is not easy to foresee terrorist attack based on certain behavior, yet the model assumes certain metrics such as frequency of contact in a social network as a significant indicator of terrorist activity. \n There are numerous levels of abstraction in president's Terror Tuesday decision-making process: first from the unannotated mass data to the machine learning algorithms to software engineers to intelligence agency, then to final decision-making. Isn't it inevitable that a lot of false positives and false negatives will arise along this long and unclear abstraction pipeline? Aren't the consequences of these false signals a matter of life and death? But really, do they care?"
	},
	"week2": 
	{
		"week" : "week2",
		"title" : "Private Persons / Public Space",
		"subtitle" : "Software for and against the public",
		"date" : "September 11, 2017",
		"text" : "Software has fundamentally changed the way both private and public opinions are voiced. Software is not a singular, isolated technology living inside hardware but rather a microcosm of its own, thus inherently ambivalent. The role it has played in voicing individual opinions in the public opinion is especially double-sided.\nThe definition of public sphere has changed with every turn in history. As explained in “The Public Sphere: An Encyclopedia Article (1964)” the scope of what public sphere includes has slowly expanded with history. From the feudal times during which the authorities “represent their power before the people, instead of for the people”, the public sphere expanded to include the actual public opinion thanks to the rise of literary journalism. Software has further augmented what journalism achieved in intensifying public discussion. How Twitter gives individuals an equal platform to be heard, sometimes by public officials, is one example of social media as software’s use case is expanding the scope of public sphere. It is not just the end result of using software, but the “actively working with the data: reorganizing it, uncovering the connections, becoming aware of correlations” (Chun, 2004) that software truly becomes a tool of empowerment. I think that one can even argue that writing code is a creative outlet for individuals to communicate.\nSoftware, however, is also as effective in silencing voices as it is in amplifying them, depending on who is behind building the software. This paradox is like the illusion of transparency that humans see at the cost of hiding the machines. For example, surveillance programs like the Matrix and analytics tools running in between requests and responses is how centralized authorities attempt to influence and breach the public opinion using software. Another example is the polarization of software engineers demographic, especially in gender. Despite many of the first generation programmers being female and machines lacking gender values, software engineering is becoming dominantly male-dominated, just within a few decades of its invention.\nWhile other industries may also have unbalanced representation, I think an equal representation in race, gender, and other background is especially important in software engineering. Software is referred to as the “actant in the world” that “augments, supplements, mediates, and regulates our live sand opens up new possibilities—but not in a deterministic way” (Kitchen & Dodge, 2011). Software is no longer a product but also a producer in that it disciplines our interactions with and expectations from software. As discussed before, software has a tremendous power of amplifying individual voices. If this gender imbalance persists and software becomes self-fulfilling prophecy that empowers only the voices of its creators-alike, it could become a dangerous loop of restricting the public sphere to only the powerful few, like the past societies."
	}
}